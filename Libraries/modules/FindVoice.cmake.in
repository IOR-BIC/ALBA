#
# Program:   ALBA (Agile Library for Biomedical Applications)
# Module:    $RCSfile: FindVoice.cmake.in,v $
# Language:  CMake 1.2
# Date:      $Date: 2004-08-25 13:44:27 $
# Version:   $Revision: 1.1 $
#
# Description:
# This module finds the location of the Voice include and library paths 
# It works if included from within the MFL build tree or if FindMFL is called before this one
#
# This module defines
#
# VOICE_SOURCE_PATH - where is the source tree (only defined if sources are provided)
# VOICE_BINARY_PATH - where is the binary tree (only defined if sources are provided)
# USE_PRECOMPILED_VOICE - true if a precompiled version of the binaries is provided

#MESSAGE("FindVoice: SOF")
IF (NOT MFL_BINARY_PATH)
  IF (MFL_BINARY_DIR)
    SET (MFL_BINARY_PATH ${MFL_BINARY_DIR})
  ENDIF (MFL_BINARY_DIR)
ENDIF (NOT MFL_BINARY_PATH)

IF (NOT MFL_SOURCE_PATH)
  IF (MFL_SOURCE_DIR)
    SET (MFL_SOURCE_PATH ${MFL_SOURCE_DIR})
  ENDIF (MFL_SOURCE_DIR)
ENDIF (NOT MFL_SOURCE_PATH)


IF (MFL_SOURCE_PATH)
  FIND_PATH(VOICE_SOURCE_PATH UseVoice.cmake.in ${MFL_SOURCE_PATH}/Voice)
  
  IF (VOICE_SOURCE_PATH)
    #MESSAGE("FindVoice: Found Voice sources, setting VOICE_BINARY_PATH to $MFL_BINARY_PATH/Voice")
    #FIND_PATH(VOICE_BINARY_PATH UseVoice.cmake ${MFL_BINARY_PATH}/Voice)
    SET (VOICE_BINARY_PATH ${MFL_BINARY_PATH}/Voice)
    
    FIND_FILE(USE_VOICE_FILE UseVoice.cmake.in ${VOICE_SOURCE_PATH})
  ELSE (VOICE_SOURCE_PATH)
    #MESSAGE("FindVoice: Voice sources not found")
    # searching for precompiled binaries
    FIND_PATH(VOICE_BINARY_PATH UseVoice.cmake ${MFL_SOURCE_PATH}/Voice)
    IF (VOICE_BINARY_PATH)
      #MESSAGE ("FindVoice: Found Voice precompiled binaries inside MFL source tree.")
      SET (USE_PRECOMPILED_VOICE 1 CACHE INTERNAL "Using Voice precompiled binaries")
      SET (VOICE_LIBRARY_PATH  ${VOICE_BINARY_PATH}/lib CACHE INTERNAL "Path to Voice precompiled libraries")
      
      FIND_FILE(USE_VOICE_FILE UseVoice.cmake ${VOICE_BINARY_PATH})
    
    ENDIF (VOICE_BINARY_PATH)
  ENDIF (VOICE_SOURCE_PATH)
  
ELSE (MFL_SOURCE_PATH)
  MESSAGE ("UseVoice: Searching Voice outside MFL source tree not supported.")
  # If not built within ALBA project try standard places
  FIND_PATH(VOICE_BINARY_PATH UseVoice.cmake
      [HKEY_CURRENT_USER\\Software\\Kitware\\CMakeSetup\\Settings\\StartPath;WhereBuild1]
      [HKEY_CURRENT_USER\\Software\\Kitware\\CMakeSetup\\Settings\\StartPath;WhereBuild2]
      [HKEY_CURRENT_USER\\Software\\Kitware\\CMakeSetup\\Settings\\StartPath;WhereBuild3]
      [HKEY_CURRENT_USER\\Software\\Kitware\\CMakeSetup\\Settings\\StartPath;WhereBuild4]
      [HKEY_CURRENT_USER\\Software\\Kitware\\CMakeSetup\\Settings\\StartPath;WhereBuild5]
      [HKEY_CURRENT_USER\\Software\\Kitware\\CMakeSetup\\Settings\\StartPath;WhereBuild6]
      [HKEY_CURRENT_USER\\Software\\Kitware\\CMakeSetup\\Settings\\StartPath;WhereBuild7]
      [HKEY_CURRENT_USER\\Software\\Kitware\\CMakeSetup\\Settings\\StartPath;WhereBuild8]
      [HKEY_CURRENT_USER\\Software\\Kitware\\CMakeSetup\\Settings\\StartPath;WhereBuild9]
      [HKEY_CURRENT_USER\\Software\\Kitware\\CMakeSetup\\Settings\\StartPath;WhereBuild10]
      )
  IF (VOICE_BINARY_PATH)
    MESSAGE ("UseVoice: Found Voice precompiled binaries outside MFL source tree.")
    SET (USE_PRECOMPILED_VOICE 1 CACHE INTERNAL "Using Voice installed binaries")
    
    FIND_FILE(USE_VOICE_FILE UseVoice.cmake ${VOICE_BINARY_PATH})
  
  ENDIF (VOICE_BINARY_PATH)
ENDIF (MFL_SOURCE_PATH)

MARK_AS_ADVANCED (
  VOICE_BINARY_PATH
  VOICE_SOURCE_PATH
  USE_VOICE_FILE
  )
  
#MESSAGE("FindVoice: EOF")